name: Build Artifact Management

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-package:
    name: Build and Package Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages and applications
        run: npm run build

      - name: Create deployment packages
        run: |
          # Create frontend package
          cd apps/web
          tar -czf ../../artifacts/web-frontend-${{ github.sha }}.tar.gz dist/

          # Create API package
          cd ../../apps/api
          tar -czf ../../artifacts/api-${{ github.sha }}.tar.gz dist/

          # Create shared packages
          cd ../../packages/shared
          tar -czf ../../artifacts/shared-${{ github.sha }}.tar.gz dist/

          cd ../ui
          tar -czf ../../artifacts/ui-${{ github.sha }}.tar.gz dist/

          cd ../config
          tar -czf ../../artifacts/config-${{ github.sha }}.tar.gz dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ github.sha }}
          path: artifacts/
          retention-days: 30

      - name: Generate build manifest
        run: |
          cat > build-manifest-${{ github.sha }}.json << EOF
          {
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "build_time": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "artifacts": {
              "web-frontend": "web-frontend-${{ github.sha }}.tar.gz",
              "api": "api-${{ github.sha }}.tar.gz",
              "shared": "shared-${{ github.sha }}.tar.gz",
              "ui": "ui-${{ github.sha }}.tar.gz",
              "config": "config-${{ github.sha }}.tar.gz"
            },
            "version": "${{ github.ref_name }}"
          }
          EOF

      - name: Upload build manifest
        uses: actions/upload-artifact@v3
        with:
          name: build-manifest-${{ github.sha }}
          path: build-manifest-${{ github.sha }}.json
          retention-days: 90

  artifact-cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    needs: build-and-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Delete old artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            // Keep only the last 10 artifacts
            const artifactsToDelete = artifacts.data.artifacts.slice(10);

            for (const artifact of artifactsToDelete) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
              console.log(`Deleted artifact: ${artifact.name}`);
            }